name: 'cicd'
on:
  push:
    paths-ignore:
      - README.md
      - infra/**
      - .github/workflows/infra.yaml
  workflow_dispatch:

permissions:
  # required to push to ghcr
  packages: write
  # required for federated credentials access to azure
  id-token: write
  # required for federated credentials access to azure
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      imageVersion: ${{ steps.prepCompose.outputs.imageVersion }}
    steps:
      - uses: actions/checkout@v4

      - id: prepCompose
        name: Add build tags to docker-commpose.yaml
        run: |
          dockerRepo="$(yq '.services.app.image' docker-compose.yaml)"
          imageVersion="$dockerRepo:$(git rev-parse --short HEAD)"

          TAG="$imageVersion" yq -i '.services.app.build.tags[0] = strenv(TAG)' docker-compose.yaml

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            printf 'Banch is main! Adding latest as build tag\n'
            TAG="$dockerRepo:latest" yq -i '.services.app.build.tags[1] = strenv(TAG)' docker-compose.yaml
          fi

          cat docker-compose.yaml | yq '.services.app.build'

          echo "imageVersion=$imageVersion" >> "$GITHUB_OUTPUT"

      - name: Build with docker
        run: docker compose build app

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to ghcr
        run: docker compose push --quiet app

  deploy:
    strategy:
      max-parallel: 1
      matrix:
        environment: [dev, prod]
        isMainBranch:
          - ${{ github.ref == 'refs/heads/main' }}
        exclude:
          - environment: prod
            isMainBranch: false
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ matrix.environment }}
    steps:
      - uses: azure/login@v1
        with:
          client-id: ${{ vars.AZ_CLIENT_ID }}
          subscription-id: ${{ vars.AZ_SUBSCRIPTION_ID }}
          tenant-id: ${{ vars.AZ_TENANT_ID }}

      - name: Update container app image
        run: |
          az containerapp update -n "ca-bikecount-${{ matrix.environment }}" -g "rg-bikecount-${{ matrix.environment }}" \
            --image "$IMAGE_VERSION"
        env:
          IMAGE_VERSION: ${{ needs.build.outputs.imageVersion }}
